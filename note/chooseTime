择时 就是 仓位 

1 成长 
2 价值

好股票 好股票大家都看得到 会很贵 五粮液 比亚迪 一直有底舱 这类有30% 

整体不错 有缺陷的公司 市场很肤浅,容易放大缺点 这类30%-50% 动态调整

受外界影响很大 周期股 热门板块的热门股 <30%
周期股不用强调基本面 

<巴菲特致股东的信> 

昨天中证500和中证1000放量调整,今天中小股票在今天的上涨行情中表现较弱,成交量也没有跟上.指数缩量上涨已经变成常态,但中小股票的表现不如中证50和沪深300, 今天白马股的成交量没有太明显的缩小,并且阳线也比较长. 一些底部的优质标的已经开始启动,下一波涨势很有可能是业绩好白马股来带动. 上证50已经几乎突破前期平台,遗憾的是成交量没有跟上. 在节前的最后一天这种成绩已经可以了 

目前各大指数都是下台阶盘整,测试前低的概率不大,但距离上面的台阶还有一段距离,短期看没那么容易上去,现在剧烈震荡的区间还是多看少动,管不住手的想法就是只要震荡我们就可以选择走势符合的或强势的,但要做好尾盘冲进去早盘杀出来的准备

板块上，今天酒店餐饮,运输服务,交通设施领涨，医药和航空板块领跌，领涨的都不是大市值的板块,感觉调整还没有结束.

select date,code from dayline  where  m5>=pre_close and m20>=pre_close and m30>=pre_close and m60>=pre_close  
and m5<close and m20<close and m30<close and m60<close and open<close  
and date = '2022-04-15' and code not like '300%' and code not like '688%' 
order by date desc limit 50;

A10:=MA(CLOSE,10);
DIF := EMA(CLOSE,12) - EMA(CLOSE,26);
DEA  := EMA(DIF,9);
DIFUP:=UPNDAY(DIF,M);
DEAUP:=UPNDAY(DEA,M);

CLOSE>A10&&DIF>0&&DEA>0&&DIFUP&&DEAUP&&NOT(CODELIKE('68'))&&NOT(CODELIKE('30')); 


find . -name "*.txt" -type f  |xargs  cat | awk 'BEGIN{FS=","}$3>=20200101&&$4=="000000"' | wc -l

 2123490

                              <OPEN>,<HIGH>,<LOW>,<CLOSE>,<VOL>
1301.JP,D,20220601,000000,3325.00,3395.00,3325.00,3395.00,14600,0
1301.JP,D,20220602,000000,3375.00,3375.00,3345.00,3370.00,9300,0

3097.JP,2020-01-15,4382.51,4470.74,4382.51,4426.63,66910

find . -name "*.txt" -type f  |xargs  cat | awk 'BEGIN{FS=",";OFS=","}$3>=20200101&&$4=="000000"{print $1,substr($3,0,4)"-"substr($3,5,2)"-"substr($3,7,2),$5,$6,$7,$8,$9}' > all_220613.txt 

LOAD DATA INFILE '/Users/lihong/gitrep/jp_data_220615/daily/jp/stock/0614_16.txt'  
  INTO TABLE dayline_jp
  FIELDS TERMINATED BY ','
  (code, date, open, high, low,close, volume);

LOAD DATA INFILE '/Users/lihong/Documents/d_jp_0724/data/daily/jp/tse_stocks/1/0617_0724.txt'  
  INTO TABLE dayline_jp
  FIELDS TERMINATED BY ','
  (code, date, open, high, low,close, volume);

python savedate/tsdata.py $1

select count(1),date from dayline_jp where m5>0 group by date desc limit 5 ;

sort -u  * | awk 'BEGIN{FS=","}$1~/\.JP$/' | awk 'BEGIN{FS=",";OFS=","}$3>=20220614&&$4=="000000"{print $1,substr($3,0,4)"-"substr($3,5,2)"-"substr($3,7,2),$5,$6,$7,$8,$9}' > 0614_16.txt

cat * | awk 'BEGIN{FS=","}$1~/\.JP$/' | awk 'BEGIN{FS=",";OFS=","}$3>20220616&&$4=="000000"{print $1,substr($3,0,4)"-"substr($3,5,2)"-"substr($3,7,2),$5,$6,$7,$8,$9}' |sort -u > 0617_0724.txt

awk '{print "python savedate/stooqdata.py " $1}' note/jprq.txt | sh

https://www.tradingview.com/chart/CFSEAW1L/?symbol=TSE%3A1375

//==============
cp data_j.csv  ~/code/plunge_be/
sudo cp data_j.csv /var/lib/mysql-files/

load data infile '/home/vagrant/code/plunge_be/data_j.csv' into table co_jp fields terminated by ',' lines terminated by'\n' ignore 1 lines (date,code,name,market,cate33_code,cate33,cate17_code,cate17,size_code,size);

load data infile '/var/lib/mysql-files/data_j.csv' into table co_jp fields terminated by ',' lines terminated by'\n' ignore 1 lines (date,code,name,market,cate33_code,cate33,cate17_code,cate17,size_code,size);

# test
sort -u * | awk 'BEGIN{FS=",";OFS=","}$1~/\.JP$/&&$3>20220822&&$4=="000000"{print $1,substr($3,0,4)"-"substr($3,5,2)"-"substr($3,7,2),$5,$6,$7,$8,$9}' |   awk 'BEGIN{FS=","}{a[$2]++}END{for(i in a){print i"\t"a[i]}}' | sort

# pro
sort -u * | awk 'BEGIN{FS=",";OFS=","}$1~/\.JP$/&&$3>20220822&&$4=="000000"{print $1,substr($3,0,4)"-"substr($3,5,2)"-"substr($3,7,2),$5,$6,$7,$8,$9}' > 0823_29.txt

LOAD DATA INFILE 'c://stooq/0823_29.txt'  
  INTO TABLE dayline_jp
  FIELDS TERMINATED BY ','
  (code, date, open, high, low,close, volume);

UPDATE co_jp SET cate33 = REPLACE(cate33, '?', '~') WHERE cate33 LIKE '%?%' 

'鉱業','建設業','食料品','繊維製品','パルプ~紙','化学','医薬品','石油~石炭製品','ゴム製品','ガラス~土石製品','鉄鋼','非鉄金属','金属製品','機械','電気機器','輸送用機器','精密機器','その他製品','電気~ガス業','水産~農林業','陸運業','海運業','空運業','倉庫~運輸関連業','情報~通信業','卸売業','小売業','銀行業','証券、商品先物取引業','保険業','その他金融業','不動産業','サービス業'

1050,2050,3050,3100,3150,3200,3250,3300,3350,3400,3450,3500,3550,3600,3650,3700,3750,3800,4050,50	,5050,5100,5150,5200,5250,6050,6100,7050,7100,7150,7200,8050,9050

/***
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © samuelx

//@version=4
study("多重平均线", overlay = true)

//设置选用的价格源类型，默认使用收盘价
src = input(close, title="价格源", type = input.source)
//设置选用的平均线类型，默认使用EMA
type = input("EMA", "MA类型", options=["SMA", "EMA", "WMA", "HMA", "VWMA", "RMA"])

//定义多条MA的默认参数
ma_a_input = input(5, title="MA1")
ma_b_input = input(10, title="MA2")
ma_c_input = input(20, title="MA3")
ma_d_input = input(30, title="MA4")
ma_e_input = input(60, title="MA5")

//定义不同的颜色，供均线绘制时使用
color_red = #FF1100
color_blue = #3596F3
color_purple = #9C27B0
color_yellow = #FFEB3B
color_orange = #FF9800

//计算各条平均线
ma_a = type == "SMA" ? sma(src,ma_a_input) : type == "EMA" ? ema(src,ma_a_input) : type == "EMA" ? ema(src,ma_a_input) : type == "WMA" ? wma(src,ma_a_input) : type == "HMA" ? hma(src,ma_a_input) : type == "VWMA" ? vwma(src,ma_a_input) : type == "RMA" ? rma(src,ma_a_input) : na
ma_b = type == "SMA" ? sma(src,ma_b_input) : type == "EMA" ? ema(src,ma_b_input) : type == "EMA" ? ema(src,ma_b_input) : type == "WMA" ? wma(src,ma_b_input) : type == "HMA" ? hma(src,ma_b_input) : type == "VWMA" ? vwma(src,ma_b_input) : type == "RMA" ? rma(src,ma_b_input) : na
ma_c = type == "SMA" ? sma(src,ma_c_input) : type == "EMA" ? ema(src,ma_c_input) : type == "EMA" ? ema(src,ma_c_input) : type == "WMA" ? wma(src,ma_c_input) : type == "HMA" ? hma(src,ma_c_input) : type == "VWMA" ? vwma(src,ma_c_input) : type == "RMA" ? rma(src,ma_c_input) : na
ma_d = type == "SMA" ? sma(src,ma_d_input) : type == "EMA" ? ema(src,ma_d_input) : type == "EMA" ? ema(src,ma_d_input) : type == "WMA" ? wma(src,ma_d_input) : type == "HMA" ? hma(src,ma_d_input) : type == "VWMA" ? vwma(src,ma_d_input) : type == "RMA" ? rma(src,ma_d_input) : na
ma_e = type == "SMA" ? sma(src,ma_e_input) : type == "EMA" ? ema(src,ma_e_input) : type == "EMA" ? ema(src,ma_e_input) : type == "WMA" ? wma(src,ma_e_input) : type == "HMA" ? hma(src,ma_e_input) : type == "VWMA" ? vwma(src,ma_e_input) : type == "RMA" ? rma(src,ma_e_input) : na

//在图表上绘制多重平均线
plot(ma_a,title='MA1',color=color_red, style=plot.style_line ,linewidth=1)
plot(ma_b,title='MA2',color=color_orange, style=plot.style_line ,linewidth=1)
plot(ma_c,title='MA3',color=color_blue, style=plot.style_line ,linewidth=1)
plot(ma_d,title='MA4',color=color_yellow, style=plot.style_line ,linewidth=1)
plot(ma_e,title='MA5',color=color_purple, style=plot.style_line ,linewidth=1)

****/

sudo systemctl start postgresql

https://quote.jpx.co.jp/jpx/template/quote.cgi?F=tmp/stock_detail&MKTN=T&QCODE=3391
